from typing import TYPE_CHECKING, Any, Tuple, List

if TYPE_CHECKING:
    from ..routes import Route

class Auth:
    """Authentication facade."""

    def add_guard(self, name: str, guard: Any): ...
    def set_configuration(self, config: dict): ...
    def guard(self, guard: Any) -> "Auth": ...
    def get_guard(self, name: str = None) -> Any: ...
    def get_config_options(self, guard: Any = None) -> dict: ...
    def attempt(self, email: str, password: str, once: bool = False) -> Any: ...
    def attempt_by_id(self, user_id: int, once: bool = False) -> Any: ...
    def logout(self) -> "Auth":
        """Logout the current authenticated user."""
        ...
    def user(self) -> Any:
        """Get the current authenticated user."""
        ...
    def register(self, dictionary: dict) -> Any:
        """"""
        ...
    def password_reset(self, email: str) -> "Tuple[None, None]|Tuple[int,str]":
        """Reset password of the user with the given email."""
        ...
    def reset_password(self, password: str, token: str) -> bool:
        """Reset password of the user with the given authentication token."""
        ...
    @classmethod
    def routes(self) -> List[Route]: ...
